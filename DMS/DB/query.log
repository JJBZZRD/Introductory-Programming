INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 384 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 385 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 386 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 387 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 388 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 389 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 390 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 391 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 392 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 393 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 394 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 395 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 396 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 397 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 398 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 407 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND username = 'volunteer1' AND password = '111' AND account_status = 'Active'
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 2
            GROUP BY planID
            
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND username = 'admin1' AND password = '111' AND account_status = 'Active'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND username = 'admin1' AND password = '111' AND account_status = 'Active'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 407 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 408 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 409 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 410 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 411 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 412 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 413 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 414 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 415 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM camps
INFO:root:DELETE FROM volunteers
INFO:root:DELETE FROM refugees
INFO:root:DELETE FROM countries
INFO:root:COMMIT
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM camps
INFO:root:DELETE FROM volunteers
INFO:root:DELETE FROM refugees
INFO:root:DELETE FROM countries
INFO:root:COMMIT
INFO:root:BEGIN 
INFO:root:
    INSERT INTO plans (planID, start_date, end_date, name, country, event_name, description, shelter, water, food, medical_supplies) VALUES
    (1, '2023-01-01', '2025-01-01', 'Wylfa Nuclear Meltdown', 'United Kingdom', 'Nuclear Crisis Management', 'Emergency response to nuclear meltdown on Anglesey', 1000, 5000, 3000, 800),
    (2, '2023-01-01', '2025-01-01', 'London Virus Outbreak', 'United Kingdom', 'Virus Containment Effort', 'Response to widespread virus outbreak in London', 2000, 8000, 5000, 1200),
    (3, '2023-01-01', '2025-01-01', 'Paris Earthquake Response', 'France', 'Earthquake Relief', 'Relief efforts for earthquake in Paris', 1500, 6000, 3500, 1000);
INFO:root:
    INSERT INTO camps (campID, location, max_shelter, water, max_water, food, max_food, medical_supplies, max_medical_supplies, planID) VALUES
    (1, 'Camden', 71, 409, 562, 478, 593, 164, 214, 1),
    (2, 'Greenwich', 198, 103, 190, 335, 502, 57, 119, 1),
    (3, 'Snowdonia', 179, 334, 545, 310, 531, 160, 248, 2),
    (4, 'Richmond', 135, 470, 741, 175, 360, 98, 181, 2),
    (5, 'Versailles', 164, 260, 537, 394, 637, 88, 222, 3)
    
INFO:root:
    INSERT INTO volunteers (first_name, last_name, username, password, date_of_birth, phone, account_status, campID) VALUES
    -- Camp 1
    ('admin', '111', 'admin', '111', '1990-05-15', '555-1234', 'Active', NULL),
    ('Jane', 'Smith', 'volunteer1', '111', '1985-08-22', '555-5678', 'Active', 1),
    ('Robert', 'Johnson', 'robert_j', 'password789', '1992-03-10', '555-9876', 'Active', 1),
    ('Emily', 'Williams', 'emily_w', 'passwordabc', '1988-11-27', '555-4321', 'Active', 1),
    ('Michael', 'Brown', 'michael_b', 'passworddef', '1995-07-18', '555-8765', 'Inactive', 1),
    ('Sophia', 'Davis', 'sophia_d', 'pass123', '1993-09-05', '555-2345', 'Active', 1),
    ('David', 'Anderson', 'david_a', 'pass456', '1991-02-14', '555-6789', 'Inactive', 1),
    ('Olivia', 'Thomas', 'olivia_t', 'pass789', '1986-12-03', '555-8765', 'Active', 1),
    ('Christopher', 'Garcia', 'chris_g', 'passabc', '1994-04-20', '555-2345', 'Active', 1),
    ('Emma', 'Johnson', 'emma_j', 'pass789', '1998-06-08', '555-5678', 'Active', 1),

    -- Camp 2
    ('Daniel', 'White', 'volunteer2', '222', '1987-10-12', '555-3456', 'Active', 2),
    ('Sophie', 'Miller', 'sophie_m', 'pass456', '1994-01-25', '555-7890', 'Active', 2),
    ('Matthew', 'Davis', 'matthew_d', 'pass789', '1990-09-30', '555-2345', 'Active', 2),
    ('Ava', 'Wilson', 'ava_w', 'passabc', '1985-12-15', '555-6789', 'Active', 2),
    ('Nicholas', 'Taylor', 'nicholas_t', 'passdef', '1992-05-18', '555-8765', 'Inactive', 2),
    ('Grace', 'Moore', 'grace_m', 'passghi', '1997-03-22', '555-1234', 'Active', 2),
    ('Ethan', 'Baker', 'ethan_b', 'passjkl', '1988-08-08', '555-5678', 'Inactive', 2),
    ('Chloe', 'Fisher', 'chloe_f', 'passmno', '1995-04-02', '555-2345', 'Active', 2),
    ('Caleb', 'Ward', 'caleb_w', 'passpqr', '1989-11-10', '555-6789', 'Active', 2),
    ('Madison', 'Perry', 'madison_p', 'passtu', '1996-07-17', '555-8765', 'Active', 2),

    -- Camp 3
    ('Liam', 'Carter', 'volunteer3', '333', '1993-02-05', '555-2345', 'Active', 3),
    ('Aubrey', 'Hayes', 'aubrey_h', 'passyz1', '1998-08-20', '555-6789', 'Active', 3),
    ('Mason', 'Wells', 'mason_w', 'pass234', '1991-04-15', '555-1234', 'Active', 3),
    ('Harper', 'Barnes', 'harper_b', 'pass567', '1986-10-30', '555-5678', 'Active', 3),
    ('Aiden', 'Fisher', 'aiden_f', 'pass890', '1994-12-22', '555-8765', 'Inactive', 3),
    ('Ella', 'Bryant', 'ella_b', 'passabc1', '1997-06-18', '555-2345', 'Active', 3),
    ('Logan', 'Coleman', 'logan_c', 'passdef1', '1989-01-12', '555-6789', 'Inactive', 3),
    ('Avery', 'Reyes', 'avery_r', 'passghi1', '1996-03-25', '555-8765', 'Active', 3),
    ('Lucas', 'Scott', 'lucas_s', 'passjkl1', '1992-07-08', '555-2345', 'Active', 3),
    ('Sophie', 'Jordan', 'sophie_j', 'passmno1', '1995-09-20', '555-6789', 'Active', 3)
    
INFO:root:
    INSERT INTO refugees (first_name, last_name, date_of_birth, gender, familyID, campID, triage_category, medical_conditions, vital_status) VALUES

    --Family separated: 8, 10, 

    -- Camp 1
    ('Isabella', 'Johnson', '2002-08-10', 'Female', 1, 1, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Smith', '1980-03-25', 'Male', 2, 1, 'Urgent', 'Diabetes', 'Alive'),
    ('Charlotte', 'Taylor', '1995-12-05', 'Female', 3, 1, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Henry', 'Clark', '2010-05-18', 'Male', 4, 1, 'None', 'None', 'Alive'),
    ('Sophia', 'Williams', '1998-10-30', 'Female', 5, 1, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('Jacob', 'Brown', '2014-06-22', 'Male', 6, 1, 'Standard', 'None', 'Alive'),
    ('Amelia', 'Harrison', '2003-04-03', 'Female', 7, 1, 'Non-Urgent', 'Allergies', 'Alive'),
    ('William', 'Baker', '1990-01-12', 'Male', 8, 1, 'None', 'Fractured Arm', 'Alive'),
    ('Sophie', 'Evans', '2005-09-20', 'Female', 9, 1, 'Urgent', 'Heart Disease', 'Alive'),
    ('Thomas', 'Jones', '1988-07-08', 'Male', 10, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Aisha', 'Khan', '1996-06-18', 'Female', 11, 1, 'Urgent', 'Hypertension', 'Alive'),
    ('Alexander', 'Brown', '1983-08-14', 'Male', 12, 1, 'None', 'Fractured Leg', 'Alive'),
    ('Lily', 'Taylor', '2007-11-02', 'Female', 13, 1, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Daniel', 'Evans', '2000-02-25', 'Male', 9, 1, 'None', 'None', 'Alive'),
    ('Ella', 'Williams', '1993-03-12', 'Female', 15, 1, 'Standard', 'None', 'Alive'),
    ('Leo', 'Jones', '2012-12-30', 'Male', 10, 1, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 17, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Mia', 'Evans', '1998-04-15', 'Female', 9, 1, 'Urgent', 'Asthma', 'Alive'),
    ('Nooh', 'Baker', '2011-09-10', 'Male', 8, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Liam', 'Thompson', '2004-05-05', 'Male', 20, 1, 'None', 'Fractured Arm', 'Alive'),

    -- Camp 2
    ('Emily', 'White', '2001-11-10', 'Female', 21, 2, 'Standard', 'None', 'Alive'),
    ('Alexander', 'Miller', '1995-03-25', 'Male', 22, 2, 'Urgent', 'Diabetes', 'Alive'),
    ('Mia', 'Davis', '2008-12-05', 'Female', 23, 2, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Leo', 'Baker', '2012-05-18', 'Male', 8, 2, 'Immediate', 'None', 'Alive'),
    ('Isabella', 'Clark', '1999-09-30', 'Female', 25, 2, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('James', 'Martin', '2007-11-15', 'Male', 26, 2, 'Standard', 'None', 'Alive'),
    ('Poppy', 'Harrison', '2015-04-03', 'Female', 7, 2, 'Non-Urgent', 'Allergies', 'Alive'),
    ('Jack', 'Baker', '1988-06-22', 'Male', 8, 2, 'Immediate', 'Fractured Arm', 'Alive'),
    ('Ruby', 'Evans', '2003-09-20', 'Female', 29, 2, 'Urgent', 'Heart Disease', 'Alive'),
    ('George', 'Jones', '1994-07-08', 'Male', 10, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Sophie', 'Harrison', '1996-06-18', 'Female', 7, 2, 'Urgent', 'Hypertension', 'Alive'),
    ('Benjamin', 'Hill', '1983-08-14', 'Male', 32, 2, 'Immediate', 'Fractured Leg', 'Alive'),
    ('Isla', 'Clark', '2007-11-02', 'Female', 33, 2, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Jacob', 'Evans', '2000-02-25', 'Male', 29, 2, 'Immediate', 'None', 'Alive'),
    ('Ella', 'Williams', '1993-03-12', 'Female', 35, 2, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Jones', '2012-12-30', 'Male', 10, 2, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 37, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Ava', 'Evans', '1998-04-15', 'Female', 29, 2, 'Urgent', 'Asthma', 'Alive'),
    ('Noah', 'Baker', '2011-09-10', 'Male', 39, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Ethan', 'Thompson', '2004-05-05', 'Male', 40, 2, 'Immediate', 'Fractured Arm', 'Alive'),

    -- Camp 3
    ('Lily', 'White', '1996-04-20', 'Female', 41, 3, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Taylor', '2002-08-15', 'Male', 42, 3, 'Urgent', 'Diabetes', 'Alive'),
    ('Ava', 'Harrison', '2010-10-05', 'Female', 7, 3, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Ethan', 'Baker', '2014-11-18', 'Male', 39, 3, 'Immediate', 'None', 'Alive'),
    ('Mia', 'Williams', '2001-09-30', 'Female', 45, 3, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('Noah', 'Martin', '2012-01-15', 'Male', 46, 3, 'Standard', 'None', 'Alive'),
    ('Layla', 'Harrison', '2015-04-02', 'Female', 7, 3, 'Non-Urgent', 'Allergies', 'Alive'),
    ('Oliver', 'Baker', '1998-01-12', 'Male', 39, 3, 'Immediate', 'Fractured Arm', 'Alive'),
    ('Isla', 'Evans', '2005-09-20', 'Female', 49, 3, 'Urgent', 'Heart Disease', 'Alive'),
    ('Harry', 'Jones', '1992-07-08', 'Male', 10, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Sophia', 'Taylor', '1996-06-18', 'Female', 51, 3, 'Urgent', 'Hypertension', 'Alive'),
    ('Henry', 'Hill', '1983-08-14', 'Male', 52, 3, 'Immediate', 'Fractured Leg', 'Alive'),
    ('Eva', 'Clark', '2007-11-02', 'Female', 53, 3, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Daniel', 'Evans', '2000-02-25', 'Male', 49, 3, 'Immediate', 'None', 'Alive'),
    ('Sophie', 'Williams', '1993-03-12', 'Female', 55, 3, 'Standard', 'None', 'Alive'),
    ('Leo', 'Jones', '2012-12-30', 'Male', 10, 3, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 57, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Mia', 'Evans', '1998-04-15', 'Female', 49, 3, 'Urgent', 'Asthma', 'Alive'),
    ('Noah', 'Baker', '2011-09-10', 'Male', 8, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Ella', 'Thompson', '2004-05-05', 'Male', 60, 3, 'Immediate', 'Fractured Arm', 'Alive')
    
INFO:root:
    INSERT INTO countries (country) VALUES
    ("Afghanistan"), ("Albania"), ("Algeria"), ("Andorra"), ("Angola"), ("Antigua and Barbuda"), ("Argentina"),
    ("Armenia"), ("Australia"), ("Austria"), ("Azerbaijan"), ("Bahamas"), ("Bahrain"), ("Bangladesh"), ("Barbados"),
    ("Belarus"), ("Belgium"), ("Belize"), ("Benin"), ("Bhutan"), ("Bolivia"), ("Bosnia and Herzegovina"), ("Botswana"),
    ("Brazil"), ("Brunei"), ("Bulgaria"), ("Burkina Faso"), ("Burundi"), ("Côte d'Ivoire"), ("Cabo Verde"), ("Cambodia"),
    ("Cameroon"), ("Canada"), ("Central African Republic"), ("Chad"), ("Chile"), ("China"), ("Colombia"), ("Comoros"),
    ("Congo (Congo-Brazzaville)"), ("Costa Rica"), ("Croatia"), ("Cuba"), ("Cyprus"), ("Czechia (Czech Republic)"),
    ("Democratic Republic of the Congo"), ("Denmark"), ("Djibouti"), ("Dominica"), ("Dominican Republic"), ("Ecuador"),
    ("Egypt"), ("El Salvador"), ("Equatorial Guinea"), ("Eritrea"), ("Estonia"), ("Eswatini (Swaziland)"), ("Ethiopia"),
    ("Fiji"), ("Finland"), ("France"), ("Gabon"), ("Gambia"), ("Georgia"), ("Germany"), ("Ghana"), ("Greece"), ("Grenada"),
    ("Guatemala"), ("Guinea"), ("Guinea-Bissau"), ("Guyana"), ("Haiti"), ("Holy See (Vatican City State)"), ("Honduras"),
    ("Hungary"), ("Iceland"), ("India"), ("Indonesia"), ("Iran"), ("Iraq"), ("Ireland"), ("Israel"), ("Italy"), ("Jamaica"),
    ("Japan"), ("Jordan"), ("Kazakhstan"), ("Kenya"), ("Kiribati"), ("Kuwait"), ("Kyrgyzstan"), ("Laos"), ("Latvia"), ("Lebanon"),
    ("Lesotho"), ("Liberia"), ("Libya"), ("Liechtenstein"), ("Lithuania"), ("Luxembourg"), ("Madagascar"), ("Malawi"),
    ("Malaysia"), ("Maldives"), ("Mali"), ("Malta"), ("Marshall Islands"), ("Mauritania"), ("Mauritius"), ("Mexico"),
    ("Micronesia"), ("Moldova"), ("Monaco"), ("Mongolia"), ("Montenegro"), ("Morocco"), ("Mozambique"), ("Myanmar"),
    ("Namibia"), ("Nauru"), ("Nepal"), ("Netherlands"), ("New Zealand"), ("Nicaragua"), ("Niger"), ("Nigeria"), ("North Korea"),
    ("North Macedonia"), ("Norway"), ("Oman"), ("Pakistan"), ("Palau"), ("Palestine (State of)"), ("Panama"), ("Papua New Guinea"),
    ("Paraguay"), ("Peru"), ("Philippines"), ("Poland"), ("Portugal"), ("Qatar"), ("Romania"), ("Russia"), ("Rwanda"),
    ("Saint Kitts and Nevis"),
    ("Saint Lucia"), ("Saint Vincent and the Grenadines"), ("Samoa"), ("San Marino"), ("Sao Tome and Principe"), ("Saudi Arabia"),
    ("Senegal"), ("Serbia"), ("Seychelles"), ("Sierra Leone"), ("Singapore"), ("Slovakia"), ("Slovenia"), ("Solomon Islands"),
    ("Somalia"),
    ("South Africa"), ("South Korea"), ("South Sudan"), ("Spain"), ("Sri Lanka"), ("Sudan"), ("Suriname"), ("Sweden"), ("Switzerland"),
    ("Syria"), ("Tajikistan"), ("Tanzania"), ("Thailand"), ("Timor-Leste"), ("Togo"), ("Tonga"), ("Trinidad and Tobago"), ("Tunisia"),
    ("Turkey"), ("Turkmenistan"), ("Tuvalu"), ("Uganda"), ("Ukraine"), ("United Arab Emirates"), ("United Kingdom"), ("United States"),
    ("Uruguay"), ("Uzbekistan"), ("Vanuatu"), ("Venezuela"), ("Vietnam"), ("Yemen"), ("Zambia"), ("Zimbabwe");
INFO:root:COMMIT
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '222'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5001 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5000 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4999 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4998 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4999 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4998 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4997 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4996 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4997 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4998 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4997 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4996 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4997 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4998 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4999 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5000 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4999 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4998 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4997 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4996 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4995 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4996 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4995 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4994 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4993 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4994 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4993 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4990 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4989 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4990 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4990 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4990 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4989 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4988 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4987 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4986 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4985 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4984 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4983 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4982 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4981 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4980 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4979 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4978 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4977 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4976 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '1111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4975 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4976 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4977 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4978 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4979 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4980 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4981 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4982 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4983 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4984 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4985 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4986 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4987 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4988 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4989 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4990 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4993 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4993 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4994 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4993 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4993 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 408 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 409 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 410 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 409 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 408 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 407 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 477 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 476 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 475 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 474 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 473 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 472 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 473 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 474 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 475 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3001 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET medical_supplies = 163 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET medical_supplies = 164 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET medical_supplies = 165 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET medical_supplies = 164 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET medical_supplies = 163 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET medical_supplies = 162 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4990 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4993 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 407 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4994 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4993 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4993 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4992 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4990 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4989 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4988 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4989 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4990 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4991 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4990 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4989 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3000 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 2999 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 999 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4988 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4987 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4986 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4985 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4984 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4983 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4982 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4981 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4980 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4979 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4978 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4977 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4976 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4975 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4974 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4973 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4972 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4971 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4970 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4969 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4968 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4967 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4966 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4965 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4964 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4963 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4962 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4961 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4960 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4959 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4958 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4957 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4956 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4955 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4954 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4953 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4952 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4951 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4950 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4949 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4948 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4947 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4946 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4945 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4944 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4943 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4942 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4941 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4940 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4939 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4938 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4937 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4936 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4935 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 2998 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 2997 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 2996 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 2995 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET max_shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET max_shelter = 71 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET max_shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4936 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4935 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4934 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4933 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4932 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4931 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4930 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4931 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4932 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4933 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4934 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4933 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4932 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4931 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4930 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4929 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4928 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4927 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4926 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 407 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4925 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 408 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4924 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 409 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4923 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 410 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 411 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 412 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4920 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 413 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4919 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 414 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4918 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 415 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4917 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 416 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4916 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 417 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4915 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 418 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4914 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 419 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4913 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 420 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4912 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 421 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4911 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 422 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4910 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 423 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4909 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 424 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4908 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 425 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4907 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 426 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4906 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 427 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4905 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 428 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4904 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4903 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4902 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 431 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4901 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 432 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4900 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 433 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4899 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 434 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4898 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 435 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4897 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 436 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4896 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 437 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4895 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 438 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4894 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 439 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 440 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 441 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4891 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 442 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4890 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4889 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4888 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 441 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4888 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 440 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4889 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 439 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4890 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 438 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4891 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 437 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 436 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 474 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 2996 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 473 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 2997 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 472 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 2998 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 471 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 2999 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 470 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3000 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 469 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3001 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 468 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3002 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 467 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3003 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 466 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3004 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 465 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3005 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 464 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3006 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 463 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3007 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 462 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3008 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 461 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3009 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 460 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3010 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 459 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3011 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 458 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3012 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 457 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET food = 3013 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7999 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 437 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7998 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 438 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7997 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 439 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7996 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 440 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7995 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 439 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7996 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 438 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7997 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 437 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7998 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 436 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7999 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 435 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8000 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 434 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8001 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 433 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8002 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 432 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8003 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 431 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8004 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8005 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8006 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 428 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4894 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 431 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4891 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 432 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4890 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 431 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4891 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 428 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4894 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 427 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4895 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 428 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4894 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 428 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4894 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 431 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4891 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 432 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4890 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 433 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4889 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 434 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4888 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 435 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 436 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4886 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 435 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 434 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4888 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 433 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4889 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 432 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4890 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 431 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4891 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 431 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4891 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 432 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4890 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 433 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4889 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 434 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4888 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 435 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 434 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4888 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 433 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4889 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 432 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4890 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 431 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4891 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 430 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4892 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 429 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4893 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 428 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4894 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 427 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4895 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 426 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4896 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 425 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4897 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 424 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4898 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 423 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4899 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 422 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4900 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 421 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4901 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 420 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4902 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 419 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4903 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 418 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4904 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 417 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4905 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 416 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4906 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 415 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4907 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 414 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4908 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 413 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4909 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 412 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4910 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 411 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4911 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 410 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4912 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 409 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4913 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 408 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4914 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 407 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4915 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4916 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4917 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4918 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4919 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4920 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4923 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 398 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4924 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 397 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4925 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 398 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4924 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4923 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4920 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4923 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 398 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4924 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 397 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4925 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 398 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4924 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4923 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4923 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4920 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4920 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4919 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4918 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4919 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4920 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4923 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4923 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4920 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4919 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4918 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4919 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4920 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4923 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 398 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4924 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 397 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4925 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 396 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4926 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 395 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4927 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 396 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4926 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 397 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4925 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 398 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4924 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4923 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4922 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4921 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4920 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4919 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4918 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4917 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4916 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4915 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4914 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4913 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4912 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4911 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4910 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4909 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4908 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4907 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4906 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4905 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4904 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4903 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6001 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6000 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5999 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5998 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5997 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5996 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5995 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5994 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 407 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5993 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5994 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5995 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5996 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5997 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5998 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5999 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5998 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5997 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 102 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5998 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 101 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 5999 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 100 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6000 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 99 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6001 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 98 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6002 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 97 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6003 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 96 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6004 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 97 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6003 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 98 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6002 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 99 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6001 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 100 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 6000 WHERE planID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4904 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND username = 'volunteer1' AND password = '111' AND account_status = 'Active'
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND first_name LIKE '%henry%' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND last_name LIKE '%henry%' AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND first_name LIKE '%jane' AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND last_name LIKE '%jane%' AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND refugeeID = 2
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND volunteerID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND volunteerID = 2
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '11'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8005 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8004 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8003 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8002 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8001 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8000 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7999 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7998 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7997 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 407 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7996 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM countries
INFO:root:BEGIN 
INFO:root:
            INSERT INTO plans (
                start_date, end_date, name, country, event_name, description, water, food, medical_supplies, shelter) 
            VALUES ('2023-01-01', '2024-01-01', 'asdf', 'United Kingdom', 'uvuib', 'Nuclear', NULL, NULL, NULL, NULL)
            
INFO:root:COMMIT
INFO:root:SELECT last_insert_rowid() FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 17
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1 AND country = 'United Kingdom'
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:UPDATE plans SET country = 'United Kingdom' WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM countries
INFO:root:BEGIN 
INFO:root:
            INSERT INTO plans (
                start_date, end_date, name, country, event_name, description, water, food, medical_supplies, shelter) 
            VALUES ('2023-01-01', '2024-01-01', 'asdf', 'United Kingdom', 'uvuib', 'Nuclear', NULL, NULL, NULL, NULL)
            
INFO:root:COMMIT
INFO:root:SELECT last_insert_rowid() FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 18
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1 AND country = 'United Kingdom'
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1
            AND triage_category = 'None')
            
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1
            AND triage_category = 'Non-Urgent')
            
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1
            AND triage_category = 'Standard')
            
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1
            AND triage_category = 'Urgent')
            
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1
            AND triage_category = 'Very-Urgent')
            
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1
            AND triage_category = 'Immediate')
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:UPDATE plans SET country = 'United Kingdom' WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM countries
INFO:root:BEGIN 
INFO:root:
            INSERT INTO plans (
                start_date, end_date, name, country, event_name, description, water, food, medical_supplies, shelter) 
            VALUES ('2023-01-01', '2024-01-01', 'asdf', 'United Kingdom', 'uvuib', 'Nuclear', NULL, NULL, NULL, NULL)
            
INFO:root:COMMIT
INFO:root:SELECT last_insert_rowid() FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 19
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1 AND country = 'United Kingdom'
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
            
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        LEFT JOIN camps ON refugees.campID = camps.campID
        WHERE camps.planID = 1
        GROUP BY familyID
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Male'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Deceased'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:UPDATE plans SET country = 'United Kingdom' WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM countries
INFO:root:BEGIN 
INFO:root:
            INSERT INTO plans (
                start_date, end_date, name, country, event_name, description, water, food, medical_supplies, shelter) 
            VALUES ('2023-01-01', '2024-01-01', 'asdf', 'United Kingdom', 'uvuib', 'Nuclear', NULL, NULL, NULL, NULL)
            
INFO:root:COMMIT
INFO:root:SELECT last_insert_rowid() FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 20
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1 AND country = 'United Kingdom'
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
            
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        LEFT JOIN camps ON refugees.campID = camps.campID
        WHERE camps.planID = 1
        GROUP BY familyID
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Male'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Female'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Other'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Deceased'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Alive'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:UPDATE plans SET country = 'United Kingdom' WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM countries
INFO:root:BEGIN 
INFO:root:
            INSERT INTO plans (
                start_date, end_date, name, country, event_name, description, water, food, medical_supplies, shelter) 
            VALUES ('2023-01-01', '2024-01-01', 'asdf', 'United Kingdom', 'uvuib', 'Nuclear', NULL, NULL, NULL, NULL)
            
INFO:root:COMMIT
INFO:root:SELECT last_insert_rowid() FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 21
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1 AND country = 'United Kingdom'
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
            
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        LEFT JOIN camps ON refugees.campID = camps.campID
        WHERE camps.planID = 1
        GROUP BY familyID
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Male'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Female'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Other'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'None'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Non-Urgent'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Standard'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Urgent'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Very-Urgent'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Immediate'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Deceased'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Alive'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:UPDATE plans SET country = 'United Kingdom' WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM countries
INFO:root:BEGIN 
INFO:root:
            INSERT INTO plans (
                start_date, end_date, name, country, event_name, description, water, food, medical_supplies, shelter) 
            VALUES ('2023-01-01', '2024-01-01', 'asdf', 'United Kingdom', 'uvuib', 'Nuclear', NULL, NULL, NULL, NULL)
            
INFO:root:COMMIT
INFO:root:SELECT last_insert_rowid() FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 22
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1 AND country = 'United Kingdom'
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
            
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
            
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        LEFT JOIN camps ON refugees.campID = camps.campID
        WHERE camps.planID = 1
        GROUP BY familyID
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND gender = 'Male'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND gender = 'Female'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND gender = 'Other'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'None'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Non-Urgent'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Standard'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Urgent'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Very-Urgent'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND triage_category = 'Immediate'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND vital_status = 'Deceased'
INFO:root:
            SELECT *
            FROM refugees
            WHERE campID IN
                (SELECT campID
                FROM camps
                WHERE planID = 1)
            AND refugeeID IS NOT NULL
             AND vital_status = 'Alive'
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:UPDATE plans SET country = 'United Kingdom' WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE camps SET food = 336 WHERE campID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND refugeeID = 5
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM countries
INFO:root:SELECT * FROM countries
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM countries
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM countries
INFO:root:SELECT * FROM countries
INFO:root:BEGIN 
INFO:root:
            INSERT INTO plans (
                start_date, end_date, name, country, event_name, description, water, food, medical_supplies, shelter) 
            VALUES ('2023-12-22', NULL, 'waegwe', 'Afghanistan', 'waegweag', 'awegweg', NULL, NULL, NULL, NULL)
            
INFO:root:COMMIT
INFO:root:SELECT last_insert_rowid() FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 23
INFO:root:SELECT * FROM plans
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM camps
INFO:root:DELETE FROM volunteers
INFO:root:DELETE FROM refugees
INFO:root:DELETE FROM countries
INFO:root:COMMIT
INFO:root:BEGIN 
INFO:root:
    INSERT INTO plans (planID, start_date, end_date, name, country, event_name, description, shelter, water, food, medical_supplies) VALUES
    (1, '2023-01-01', '2025-01-01', 'Wylfa Nuclear Meltdown', 'United Kingdom', 'Nuclear Crisis Management', 'Emergency response to nuclear meltdown on Anglesey', 1000, 5000, 3000, 800),
    (2, '2023-01-01', '2025-01-01', 'London Virus Outbreak', 'United Kingdom', 'Virus Containment Effort', 'Response to widespread virus outbreak in London', 2000, 8000, 5000, 1200),
    (3, '2023-01-01', '2025-01-01', 'Paris Earthquake Response', 'France', 'Earthquake Relief', 'Relief efforts for earthquake in Paris', 1500, 6000, 3500, 1000);
INFO:root:
    INSERT INTO camps (campID, location, max_shelter, water, max_water, food, max_food, medical_supplies, max_medical_supplies, planID) VALUES
    (1, 'Camden', 71, 409, 562, 478, 593, 164, 214, 1),
    (2, 'Greenwich', 198, 103, 190, 335, 502, 57, 119, 1),
    (3, 'Snowdonia', 179, 334, 545, 310, 531, 160, 248, 2),
    (4, 'Richmond', 135, 470, 741, 175, 360, 98, 181, 2),
    (5, 'Versailles', 164, 260, 537, 394, 637, 88, 222, 3)
    
INFO:root:
    INSERT INTO volunteers (first_name, last_name, username, password, date_of_birth, phone, account_status, campID) VALUES
    -- Camp 1
    ('admin', '111', 'admin', '111', '1990-05-15', '555-1234', 'Active', NULL),
    ('Jane', 'Smith', 'volunteer1', '111', '1985-08-22', '555-5678', 'Active', 1),
    ('Robert', 'Johnson', 'robert_j', 'password789', '1992-03-10', '555-9876', 'Active', 1),
    ('Emily', 'Williams', 'emily_w', 'passwordabc', '1988-11-27', '555-4321', 'Active', 1),
    ('Michael', 'Brown', 'michael_b', 'passworddef', '1995-07-18', '555-8765', 'Inactive', 1),
    ('Sophia', 'Davis', 'sophia_d', 'pass123', '1993-09-05', '555-2345', 'Active', 1),
    ('David', 'Anderson', 'david_a', 'pass456', '1991-02-14', '555-6789', 'Inactive', 1),
    ('Olivia', 'Thomas', 'olivia_t', 'pass789', '1986-12-03', '555-8765', 'Active', 1),
    ('Christopher', 'Garcia', 'chris_g', 'passabc', '1994-04-20', '555-2345', 'Active', 1),
    ('Emma', 'Johnson', 'emma_j', 'pass789', '1998-06-08', '555-5678', 'Active', 1),

    -- Camp 2
    ('Daniel', 'White', 'volunteer2', '222', '1987-10-12', '555-3456', 'Active', 2),
    ('Sophie', 'Miller', 'sophie_m', 'pass456', '1994-01-25', '555-7890', 'Active', 2),
    ('Matthew', 'Davis', 'matthew_d', 'pass789', '1990-09-30', '555-2345', 'Active', 2),
    ('Ava', 'Wilson', 'ava_w', 'passabc', '1985-12-15', '555-6789', 'Active', 2),
    ('Nicholas', 'Taylor', 'nicholas_t', 'passdef', '1992-05-18', '555-8765', 'Inactive', 2),
    ('Grace', 'Moore', 'grace_m', 'passghi', '1997-03-22', '555-1234', 'Active', 2),
    ('Ethan', 'Baker', 'ethan_b', 'passjkl', '1988-08-08', '555-5678', 'Inactive', 2),
    ('Chloe', 'Fisher', 'chloe_f', 'passmno', '1995-04-02', '555-2345', 'Active', 2),
    ('Caleb', 'Ward', 'caleb_w', 'passpqr', '1989-11-10', '555-6789', 'Active', 2),
    ('Madison', 'Perry', 'madison_p', 'passtu', '1996-07-17', '555-8765', 'Active', 2),

    -- Camp 3
    ('Liam', 'Carter', 'volunteer3', '333', '1993-02-05', '555-2345', 'Active', 3),
    ('Aubrey', 'Hayes', 'aubrey_h', 'passyz1', '1998-08-20', '555-6789', 'Active', 3),
    ('Mason', 'Wells', 'mason_w', 'pass234', '1991-04-15', '555-1234', 'Active', 3),
    ('Harper', 'Barnes', 'harper_b', 'pass567', '1986-10-30', '555-5678', 'Active', 3),
    ('Aiden', 'Fisher', 'aiden_f', 'pass890', '1994-12-22', '555-8765', 'Inactive', 3),
    ('Ella', 'Bryant', 'ella_b', 'passabc1', '1997-06-18', '555-2345', 'Active', 3),
    ('Logan', 'Coleman', 'logan_c', 'passdef1', '1989-01-12', '555-6789', 'Inactive', 3),
    ('Avery', 'Reyes', 'avery_r', 'passghi1', '1996-03-25', '555-8765', 'Active', 3),
    ('Lucas', 'Scott', 'lucas_s', 'passjkl1', '1992-07-08', '555-2345', 'Active', 3),
    ('Sophie', 'Jordan', 'sophie_j', 'passmno1', '1995-09-20', '555-6789', 'Active', 3)
    
INFO:root:
    INSERT INTO refugees (first_name, last_name, date_of_birth, gender, familyID, campID, triage_category, medical_conditions, vital_status) VALUES

    --Family separated: 8, 10, 

    -- Camp 1
    ('Isabella', 'Johnson', '2002-08-10', 'Female', 1, 1, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Smith', '1980-03-25', 'Male', 2, 1, 'Urgent', 'Diabetes', 'Alive'),
    ('Charlotte', 'Taylor', '1995-12-05', 'Female', 3, 1, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Henry', 'Clark', '2010-05-18', 'Male', 4, 1, 'None', 'None', 'Alive'),
    ('Sophia', 'Williams', '1998-10-30', 'Female', 5, 1, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('Jacob', 'Brown', '2014-06-22', 'Male', 6, 1, 'Standard', 'None', 'Alive'),
    ('Amelia', 'Harrison', '2003-04-03', 'Female', 7, 1, 'Non-Urgent', 'Allergies', 'Alive'),
    ('William', 'Baker', '1990-01-12', 'Male', 8, 1, 'None', 'Fractured Arm', 'Alive'),
    ('Sophie', 'Evans', '2005-09-20', 'Female', 9, 1, 'Urgent', 'Heart Disease', 'Alive'),
    ('Thomas', 'Jones', '1988-07-08', 'Male', 10, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Aisha', 'Khan', '1996-06-18', 'Female', 11, 1, 'Urgent', 'Hypertension', 'Alive'),
    ('Alexander', 'Brown', '1983-08-14', 'Male', 12, 1, 'None', 'Fractured Leg', 'Alive'),
    ('Lily', 'Taylor', '2007-11-02', 'Female', 13, 1, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Daniel', 'Evans', '2000-02-25', 'Male', 9, 1, 'None', 'None', 'Alive'),
    ('Ella', 'Williams', '1993-03-12', 'Female', 15, 1, 'Standard', 'None', 'Alive'),
    ('Leo', 'Jones', '2012-12-30', 'Male', 10, 1, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 17, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Mia', 'Evans', '1998-04-15', 'Female', 9, 1, 'Urgent', 'Asthma', 'Alive'),
    ('Nooh', 'Baker', '2011-09-10', 'Male', 8, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Liam', 'Thompson', '2004-05-05', 'Male', 20, 1, 'None', 'Fractured Arm', 'Alive'),

    -- Camp 2
    ('Emily', 'White', '2001-11-10', 'Female', 21, 2, 'Standard', 'None', 'Alive'),
    ('Alexander', 'Miller', '1995-03-25', 'Male', 22, 2, 'Urgent', 'Diabetes', 'Alive'),
    ('Mia', 'Davis', '2008-12-05', 'Female', 23, 2, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Leo', 'Baker', '2012-05-18', 'Male', 8, 2, 'Immediate', 'None', 'Alive'),
    ('Isabella', 'Clark', '1999-09-30', 'Female', 25, 2, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('James', 'Martin', '2007-11-15', 'Male', 26, 2, 'Standard', 'None', 'Alive'),
    ('Poppy', 'Harrison', '2015-04-03', 'Female', 7, 2, 'Non-Urgent', 'Allergies', 'Alive'),
    ('Jack', 'Baker', '1988-06-22', 'Male', 8, 2, 'Immediate', 'Fractured Arm', 'Alive'),
    ('Ruby', 'Evans', '2003-09-20', 'Female', 29, 2, 'Urgent', 'Heart Disease', 'Alive'),
    ('George', 'Jones', '1994-07-08', 'Male', 10, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Sophie', 'Harrison', '1996-06-18', 'Female', 7, 2, 'Urgent', 'Hypertension', 'Alive'),
    ('Benjamin', 'Hill', '1983-08-14', 'Male', 32, 2, 'Immediate', 'Fractured Leg', 'Alive'),
    ('Isla', 'Clark', '2007-11-02', 'Female', 33, 2, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Jacob', 'Evans', '2000-02-25', 'Male', 29, 2, 'Immediate', 'None', 'Alive'),
    ('Ella', 'Williams', '1993-03-12', 'Female', 35, 2, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Jones', '2012-12-30', 'Male', 10, 2, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 37, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Ava', 'Evans', '1998-04-15', 'Female', 29, 2, 'Urgent', 'Asthma', 'Alive'),
    ('Noah', 'Baker', '2011-09-10', 'Male', 39, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Ethan', 'Thompson', '2004-05-05', 'Male', 40, 2, 'Immediate', 'Fractured Arm', 'Alive'),

    -- Camp 3
    ('Lily', 'White', '1996-04-20', 'Female', 41, 3, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Taylor', '2002-08-15', 'Male', 42, 3, 'Urgent', 'Diabetes', 'Alive'),
    ('Ava', 'Harrison', '2010-10-05', 'Female', 7, 3, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Ethan', 'Baker', '2014-11-18', 'Male', 39, 3, 'Immediate', 'None', 'Alive'),
    ('Mia', 'Williams', '2001-09-30', 'Female', 45, 3, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('Noah', 'Martin', '2012-01-15', 'Male', 46, 3, 'Standard', 'None', 'Alive'),
    ('Layla', 'Harrison', '2015-04-02', 'Female', 7, 3, 'Non-Urgent', 'Allergies', 'Alive'),
    ('Oliver', 'Baker', '1998-01-12', 'Male', 39, 3, 'Immediate', 'Fractured Arm', 'Alive'),
    ('Isla', 'Evans', '2005-09-20', 'Female', 49, 3, 'Urgent', 'Heart Disease', 'Alive'),
    ('Harry', 'Jones', '1992-07-08', 'Male', 10, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Sophia', 'Taylor', '1996-06-18', 'Female', 51, 3, 'Urgent', 'Hypertension', 'Alive'),
    ('Henry', 'Hill', '1983-08-14', 'Male', 52, 3, 'Immediate', 'Fractured Leg', 'Alive'),
    ('Eva', 'Clark', '2007-11-02', 'Female', 53, 3, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Daniel', 'Evans', '2000-02-25', 'Male', 49, 3, 'Immediate', 'None', 'Alive'),
    ('Sophie', 'Williams', '1993-03-12', 'Female', 55, 3, 'Standard', 'None', 'Alive'),
    ('Leo', 'Jones', '2012-12-30', 'Male', 10, 3, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 57, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Mia', 'Evans', '1998-04-15', 'Female', 49, 3, 'Urgent', 'Asthma', 'Alive'),
    ('Noah', 'Baker', '2011-09-10', 'Male', 8, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Ella', 'Thompson', '2004-05-05', 'Male', 60, 3, 'Immediate', 'Fractured Arm', 'Alive')
    
INFO:root:
    INSERT INTO countries (country) VALUES
    ("Afghanistan"), ("Albania"), ("Algeria"), ("Andorra"), ("Angola"), ("Antigua and Barbuda"), ("Argentina"),
    ("Armenia"), ("Australia"), ("Austria"), ("Azerbaijan"), ("Bahamas"), ("Bahrain"), ("Bangladesh"), ("Barbados"),
    ("Belarus"), ("Belgium"), ("Belize"), ("Benin"), ("Bhutan"), ("Bolivia"), ("Bosnia and Herzegovina"), ("Botswana"),
    ("Brazil"), ("Brunei"), ("Bulgaria"), ("Burkina Faso"), ("Burundi"), ("Côte d'Ivoire"), ("Cabo Verde"), ("Cambodia"),
    ("Cameroon"), ("Canada"), ("Central African Republic"), ("Chad"), ("Chile"), ("China"), ("Colombia"), ("Comoros"),
    ("Congo (Congo-Brazzaville)"), ("Costa Rica"), ("Croatia"), ("Cuba"), ("Cyprus"), ("Czechia (Czech Republic)"),
    ("Democratic Republic of the Congo"), ("Denmark"), ("Djibouti"), ("Dominica"), ("Dominican Republic"), ("Ecuador"),
    ("Egypt"), ("El Salvador"), ("Equatorial Guinea"), ("Eritrea"), ("Estonia"), ("Eswatini (Swaziland)"), ("Ethiopia"),
    ("Fiji"), ("Finland"), ("France"), ("Gabon"), ("Gambia"), ("Georgia"), ("Germany"), ("Ghana"), ("Greece"), ("Grenada"),
    ("Guatemala"), ("Guinea"), ("Guinea-Bissau"), ("Guyana"), ("Haiti"), ("Holy See (Vatican City State)"), ("Honduras"),
    ("Hungary"), ("Iceland"), ("India"), ("Indonesia"), ("Iran"), ("Iraq"), ("Ireland"), ("Israel"), ("Italy"), ("Jamaica"),
    ("Japan"), ("Jordan"), ("Kazakhstan"), ("Kenya"), ("Kiribati"), ("Kuwait"), ("Kyrgyzstan"), ("Laos"), ("Latvia"), ("Lebanon"),
    ("Lesotho"), ("Liberia"), ("Libya"), ("Liechtenstein"), ("Lithuania"), ("Luxembourg"), ("Madagascar"), ("Malawi"),
    ("Malaysia"), ("Maldives"), ("Mali"), ("Malta"), ("Marshall Islands"), ("Mauritania"), ("Mauritius"), ("Mexico"),
    ("Micronesia"), ("Moldova"), ("Monaco"), ("Mongolia"), ("Montenegro"), ("Morocco"), ("Mozambique"), ("Myanmar"),
    ("Namibia"), ("Nauru"), ("Nepal"), ("Netherlands"), ("New Zealand"), ("Nicaragua"), ("Niger"), ("Nigeria"), ("North Korea"),
    ("North Macedonia"), ("Norway"), ("Oman"), ("Pakistan"), ("Palau"), ("Palestine (State of)"), ("Panama"), ("Papua New Guinea"),
    ("Paraguay"), ("Peru"), ("Philippines"), ("Poland"), ("Portugal"), ("Qatar"), ("Romania"), ("Russia"), ("Rwanda"),
    ("Saint Kitts and Nevis"),
    ("Saint Lucia"), ("Saint Vincent and the Grenadines"), ("Samoa"), ("San Marino"), ("Sao Tome and Principe"), ("Saudi Arabia"),
    ("Senegal"), ("Serbia"), ("Seychelles"), ("Sierra Leone"), ("Singapore"), ("Slovakia"), ("Slovenia"), ("Solomon Islands"),
    ("Somalia"),
    ("South Africa"), ("South Korea"), ("South Sudan"), ("Spain"), ("Sri Lanka"), ("Sudan"), ("Suriname"), ("Sweden"), ("Switzerland"),
    ("Syria"), ("Tajikistan"), ("Tanzania"), ("Thailand"), ("Timor-Leste"), ("Togo"), ("Tonga"), ("Trinidad and Tobago"), ("Tunisia"),
    ("Turkey"), ("Turkmenistan"), ("Tuvalu"), ("Uganda"), ("Ukraine"), ("United Arab Emirates"), ("United Kingdom"), ("United States"),
    ("Uruguay"), ("Uzbekistan"), ("Vanuatu"), ("Venezuela"), ("Vietnam"), ("Yemen"), ("Zambia"), ("Zimbabwe");
INFO:root:COMMIT
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
