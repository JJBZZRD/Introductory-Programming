INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM countries
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM countries
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM countries
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM refugees
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND refugeeID = 1
INFO:root:SELECT * FROM refugees
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7996 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 333 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7997 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 332 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7998 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 331 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 7999 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 330 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8000 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 329 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8001 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 328 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8002 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 327 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8003 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 326 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8004 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 325 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8005 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 324 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8006 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 323 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8007 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 322 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8008 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 321 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8009 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 320 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8010 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 319 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8011 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 318 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8012 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 317 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8013 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 316 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8014 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 315 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8015 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 314 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8016 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 313 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8017 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 312 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8018 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 311 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8019 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 310 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8020 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 309 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8021 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 308 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8022 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 307 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8023 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 306 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8024 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 305 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8023 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 306 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8022 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 307 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8021 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 308 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8020 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 309 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 8019 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 310 WHERE campID = 3
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 998 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 997 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM countries
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 2
            GROUP BY planID
            
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 3
            GROUP BY planID
            
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 2
            GROUP BY planID
            
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 3
            GROUP BY planID
            
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 2
            GROUP BY planID
            
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 3
            GROUP BY planID
            
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 2
            GROUP BY planID
            
INFO:root:
            SELECT SUM(max_shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 3
            GROUP BY planID
            
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4910 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 395 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4909 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 396 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4908 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 397 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4907 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 398 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4906 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4905 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4904 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4903 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4902 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4901 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4900 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 1991 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 2001 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 2011 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 2021 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET medical_supplies = 1209 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET medical_supplies = 1219 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET medical_supplies = 1229 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET medical_supplies = 1239 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET medical_supplies = 1229 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET medical_supplies = 1219 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET medical_supplies = 1209 WHERE planID = 2
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 3
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '11'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4910 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 395 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4920 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 385 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4930 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 375 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4940 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 365 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4950 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 355 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4960 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 345 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4950 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 355 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 4960 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 345 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 1007 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 1017 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 1007 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 997 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 987 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 977 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 967 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 957 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 947 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 937 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 927 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 917 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 907 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 897 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 877 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 897 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 907 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 897 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 877 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 897 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 907 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 897 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 877 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 867 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 877 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 897 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 887 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 877 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM camps
INFO:root:DELETE FROM volunteers
INFO:root:DELETE FROM refugees
INFO:root:DELETE FROM countries
INFO:root:COMMIT
INFO:root:BEGIN 
INFO:root:
    INSERT INTO plans (planID, start_date, end_date, name, country, event_name, description, shelter, water, food, medical_supplies) VALUES
    (1, '2023-01-01', '2025-01-01', 'Wylfa Nuclear Meltdown', 'United Kingdom', 'Nuclear Crisis Management', 'Emergency response to nuclear meltdown on Anglesey', 100, 100, 100, 100),
    (2, '2023-01-01', '2025-01-01', 'London Virus Outbreak', 'United Kingdom', 'Virus Containment Effort', 'Response to widespread virus outbreak in London', 200, 200, 200, 200),
    (3, '2023-01-01', '2025-01-01', 'Paris Earthquake Response', 'France', 'Earthquake Relief', 'Relief efforts for earthquake in Paris', 300, 300, 300, 300);
INFO:root:
    INSERT INTO camps (campID, location, shelter, water, max_water, food, max_food, medical_supplies, max_medical_supplies, planID) VALUES
    (1, 'Camden', 20, 300, 600, 200, 400, 100, 200, 1),
    (2, 'Greenwich', 20, 300, 600, 200, 400, 100, 200, 1),
    (3, 'Snowdonia', 20, 300, 600, 200, 400, 100, 200, 2),
    (4, 'Richmond', 20, 300, 600, 200, 400, 100, 200, 2),
    (5, 'Versailles', 20, 300, 600, 200, 400, 100, 200, 3)
    
INFO:root:
    INSERT INTO volunteers (first_name, last_name, username, password, date_of_birth, phone, account_status, campID) VALUES
    -- Camp 1
    ('admin', '111', 'admin', '111', '1990-05-15', '555-1234', 'Active', NULL),
    ('Jane', 'Smith', 'volunteer1', '111', '1985-08-22', '555-5678', 'Active', 1),
    ('Robert', 'Johnson', 'robert_j', 'password789', '1992-03-10', '555-9876', 'Active', 1),
    ('Emily', 'Williams', 'emily_w', 'passwordabc', '1988-11-27', '555-4321', 'Active', 1),
    ('Michael', 'Brown', 'michael_b', 'passworddef', '1995-07-18', '555-8765', 'Inactive', 1),
    ('Sophia', 'Davis', 'sophia_d', 'pass123', '1993-09-05', '555-2345', 'Active', 1),
    ('David', 'Anderson', 'david_a', 'pass456', '1991-02-14', '555-6789', 'Inactive', 1),
    ('Olivia', 'Thomas', 'olivia_t', 'pass789', '1986-12-03', '555-8765', 'Active', 1),
    ('Christopher', 'Garcia', 'chris_g', 'passabc', '1994-04-20', '555-2345', 'Active', 1),
    ('Emma', 'Johnson', 'emma_j', 'pass789', '1998-06-08', '555-5678', 'Active', 1),

    -- Camp 2
    ('Daniel', 'White', 'volunteer2', '222', '1987-10-12', '555-3456', 'Active', 2),
    ('Sophie', 'Miller', 'sophie_m', 'pass456', '1994-01-25', '555-7890', 'Active', 2),
    ('Matthew', 'Davis', 'matthew_d', 'pass789', '1990-09-30', '555-2345', 'Active', 2),
    ('Ava', 'Wilson', 'ava_w', 'passabc', '1985-12-15', '555-6789', 'Active', 2),
    ('Nicholas', 'Taylor', 'nicholas_t', 'passdef', '1992-05-18', '555-8765', 'Inactive', 2),
    ('Grace', 'Moore', 'grace_m', 'passghi', '1997-03-22', '555-1234', 'Active', 2),
    ('Ethan', 'Baker', 'ethan_b', 'passjkl', '1988-08-08', '555-5678', 'Inactive', 2),
    ('Chloe', 'Fisher', 'chloe_f', 'passmno', '1995-04-02', '555-2345', 'Active', 2),
    ('Caleb', 'Ward', 'caleb_w', 'passpqr', '1989-11-10', '555-6789', 'Active', 2),
    ('Madison', 'Perry', 'madison_p', 'passtu', '1996-07-17', '555-8765', 'Active', 2),

    -- Camp 3
    ('Liam', 'Carter', 'volunteer3', '333', '1993-02-05', '555-2345', 'Active', 3),
    ('Aubrey', 'Hayes', 'aubrey_h', 'passyz1', '1998-08-20', '555-6789', 'Active', 3),
    ('Mason', 'Wells', 'mason_w', 'pass234', '1991-04-15', '555-1234', 'Active', 3),
    ('Harper', 'Barnes', 'harper_b', 'pass567', '1986-10-30', '555-5678', 'Active', 3),
    ('Aiden', 'Fisher', 'aiden_f', 'pass890', '1994-12-22', '555-8765', 'Inactive', 3),
    ('Ella', 'Bryant', 'ella_b', 'passabc1', '1997-06-18', '555-2345', 'Active', 3),
    ('Logan', 'Coleman', 'logan_c', 'passdef1', '1989-01-12', '555-6789', 'Inactive', 3),
    ('Avery', 'Reyes', 'avery_r', 'passghi1', '1996-03-25', '555-8765', 'Active', 3),
    ('Lucas', 'Scott', 'lucas_s', 'passjkl1', '1992-07-08', '555-2345', 'Active', 3),
    ('Sophie', 'Jordan', 'sophie_j', 'passmno1', '1995-09-20', '555-6789', 'Active', 3)
    
INFO:root:
    INSERT INTO refugees (first_name, last_name, date_of_birth, gender, familyID, campID, triage_category, medical_conditions, vital_status) VALUES

    --Family separated: 8, 10, 

    -- Camp 1
    ('Isabella', 'Johnson', '2002-08-10', 'Female', 1, 1, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Smith', '1980-03-25', 'Male', 2, 1, 'Urgent', 'Diabetes', 'Alive'),
    ('Charlotte', 'Taylor', '1995-12-05', 'Female', 3, 1, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Henry', 'Clark', '2010-05-18', 'Male', 4, 1, 'None', 'None', 'Alive'),
    ('Sophia', 'Williams', '1998-10-30', 'Female', 5, 1, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('Jacob', 'Brown', '2014-06-22', 'Male', 6, 1, 'Standard', 'None', 'Alive'),
    ('Amelia', 'Harrison', '2003-04-03', 'Female', 7, 1, 'Non-Urgent', 'Allergies', 'Alive'),
    ('William', 'Baker', '1990-01-12', 'Male', 8, 1, 'None', 'Fractured Arm', 'Alive'),
    ('Sophie', 'Evans', '2005-09-20', 'Female', 9, 1, 'Urgent', 'Heart Disease', 'Alive'),
    ('Thomas', 'Jones', '1988-07-08', 'Male', 10, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Aisha', 'Khan', '1996-06-18', 'Female', 11, 1, 'Urgent', 'Hypertension', 'Alive'),
    ('Alexander', 'Brown', '1983-08-14', 'Male', 12, 1, 'None', 'Fractured Leg', 'Alive'),
    ('Lily', 'Taylor', '2007-11-02', 'Female', 13, 1, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Daniel', 'Evans', '2000-02-25', 'Male', 9, 1, 'None', 'None', 'Alive'),
    ('Ella', 'Williams', '1993-03-12', 'Female', 15, 1, 'Standard', 'None', 'Alive'),
    ('Leo', 'Jones', '2012-12-30', 'Male', 10, 1, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 17, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Mia', 'Evans', '1998-04-15', 'Female', 9, 1, 'Urgent', 'Asthma', 'Alive'),
    ('Nooh', 'Baker', '2011-09-10', 'Male', 8, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Liam', 'Thompson', '2004-05-05', 'Male', 20, 1, 'None', 'Fractured Arm', 'Alive'),

    -- Camp 2
    ('Emily', 'White', '2001-11-10', 'Female', 21, 2, 'Standard', 'None', 'Alive'),
    ('Alexander', 'Miller', '1995-03-25', 'Male', 22, 2, 'Urgent', 'Diabetes', 'Alive'),
    ('Mia', 'Davis', '2008-12-05', 'Female', 23, 2, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Leo', 'Baker', '2012-05-18', 'Male', 8, 2, 'Immediate', 'None', 'Alive'),
    ('Isabella', 'Clark', '1999-09-30', 'Female', 25, 2, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('James', 'Martin', '2007-11-15', 'Male', 26, 2, 'Standard', 'None', 'Alive'),
    ('Poppy', 'Harrison', '2015-04-03', 'Female', 7, 2, 'Non-Urgent', 'Allergies', 'Alive'),
    ('Jack', 'Baker', '1988-06-22', 'Male', 8, 2, 'Immediate', 'Fractured Arm', 'Alive'),
    ('Ruby', 'Evans', '2003-09-20', 'Female', 29, 2, 'Urgent', 'Heart Disease', 'Alive'),
    ('George', 'Jones', '1994-07-08', 'Male', 10, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Sophie', 'Harrison', '1996-06-18', 'Female', 7, 2, 'Urgent', 'Hypertension', 'Alive'),
    ('Benjamin', 'Hill', '1983-08-14', 'Male', 32, 2, 'Immediate', 'Fractured Leg', 'Alive'),
    ('Isla', 'Clark', '2007-11-02', 'Female', 33, 2, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Jacob', 'Evans', '2000-02-25', 'Male', 29, 2, 'Immediate', 'None', 'Alive'),
    ('Ella', 'Williams', '1993-03-12', 'Female', 35, 2, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Jones', '2012-12-30', 'Male', 10, 2, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 37, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Ava', 'Evans', '1998-04-15', 'Female', 29, 2, 'Urgent', 'Asthma', 'Alive'),
    ('Noah', 'Baker', '2011-09-10', 'Male', 39, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Ethan', 'Thompson', '2004-05-05', 'Male', 40, 2, 'Immediate', 'Fractured Arm', 'Alive'),

    -- Camp 3
    ('Lily', 'White', '1996-04-20', 'Female', 41, 3, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Taylor', '2002-08-15', 'Male', 42, 3, 'Urgent', 'Diabetes', 'Alive'),
    ('Ava', 'Harrison', '2010-10-05', 'Female', 7, 3, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Ethan', 'Baker', '2014-11-18', 'Male', 39, 3, 'Immediate', 'None', 'Alive'),
    ('Mia', 'Williams', '2001-09-30', 'Female', 45, 3, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('Noah', 'Martin', '2012-01-15', 'Male', 46, 3, 'Standard', 'None', 'Alive'),
    ('Layla', 'Harrison', '2015-04-02', 'Female', 7, 3, 'Non-Urgent', 'Allergies', 'Alive'),
    ('Oliver', 'Baker', '1998-01-12', 'Male', 39, 3, 'Immediate', 'Fractured Arm', 'Alive'),
    ('Isla', 'Evans', '2005-09-20', 'Female', 49, 3, 'Urgent', 'Heart Disease', 'Alive'),
    ('Harry', 'Jones', '1992-07-08', 'Male', 10, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Sophia', 'Taylor', '1996-06-18', 'Female', 51, 3, 'Urgent', 'Hypertension', 'Alive'),
    ('Henry', 'Hill', '1983-08-14', 'Male', 52, 3, 'Immediate', 'Fractured Leg', 'Alive'),
    ('Eva', 'Clark', '2007-11-02', 'Female', 53, 3, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Daniel', 'Evans', '2000-02-25', 'Male', 49, 3, 'Immediate', 'None', 'Alive'),
    ('Sophie', 'Williams', '1993-03-12', 'Female', 55, 3, 'Standard', 'None', 'Alive'),
    ('Leo', 'Jones', '2012-12-30', 'Male', 10, 3, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 57, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Mia', 'Evans', '1998-04-15', 'Female', 49, 3, 'Urgent', 'Asthma', 'Alive'),
    ('Noah', 'Baker', '2011-09-10', 'Male', 8, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Ella', 'Thompson', '2004-05-05', 'Male', 60, 3, 'Immediate', 'Fractured Arm', 'Alive')
    
INFO:root:
    INSERT INTO countries (country) VALUES
    ("Afghanistan"), ("Albania"), ("Algeria"), ("Andorra"), ("Angola"), ("Antigua and Barbuda"), ("Argentina"),
    ("Armenia"), ("Australia"), ("Austria"), ("Azerbaijan"), ("Bahamas"), ("Bahrain"), ("Bangladesh"), ("Barbados"),
    ("Belarus"), ("Belgium"), ("Belize"), ("Benin"), ("Bhutan"), ("Bolivia"), ("Bosnia and Herzegovina"), ("Botswana"),
    ("Brazil"), ("Brunei"), ("Bulgaria"), ("Burkina Faso"), ("Burundi"), ("Côte d'Ivoire"), ("Cabo Verde"), ("Cambodia"),
    ("Cameroon"), ("Canada"), ("Central African Republic"), ("Chad"), ("Chile"), ("China"), ("Colombia"), ("Comoros"),
    ("Congo (Congo-Brazzaville)"), ("Costa Rica"), ("Croatia"), ("Cuba"), ("Cyprus"), ("Czechia (Czech Republic)"),
    ("Democratic Republic of the Congo"), ("Denmark"), ("Djibouti"), ("Dominica"), ("Dominican Republic"), ("Ecuador"),
    ("Egypt"), ("El Salvador"), ("Equatorial Guinea"), ("Eritrea"), ("Estonia"), ("Eswatini (Swaziland)"), ("Ethiopia"),
    ("Fiji"), ("Finland"), ("France"), ("Gabon"), ("Gambia"), ("Georgia"), ("Germany"), ("Ghana"), ("Greece"), ("Grenada"),
    ("Guatemala"), ("Guinea"), ("Guinea-Bissau"), ("Guyana"), ("Haiti"), ("Holy See (Vatican City State)"), ("Honduras"),
    ("Hungary"), ("Iceland"), ("India"), ("Indonesia"), ("Iran"), ("Iraq"), ("Ireland"), ("Israel"), ("Italy"), ("Jamaica"),
    ("Japan"), ("Jordan"), ("Kazakhstan"), ("Kenya"), ("Kiribati"), ("Kuwait"), ("Kyrgyzstan"), ("Laos"), ("Latvia"), ("Lebanon"),
    ("Lesotho"), ("Liberia"), ("Libya"), ("Liechtenstein"), ("Lithuania"), ("Luxembourg"), ("Madagascar"), ("Malawi"),
    ("Malaysia"), ("Maldives"), ("Mali"), ("Malta"), ("Marshall Islands"), ("Mauritania"), ("Mauritius"), ("Mexico"),
    ("Micronesia"), ("Moldova"), ("Monaco"), ("Mongolia"), ("Montenegro"), ("Morocco"), ("Mozambique"), ("Myanmar"),
    ("Namibia"), ("Nauru"), ("Nepal"), ("Netherlands"), ("New Zealand"), ("Nicaragua"), ("Niger"), ("Nigeria"), ("North Korea"),
    ("North Macedonia"), ("Norway"), ("Oman"), ("Pakistan"), ("Palau"), ("Palestine (State of)"), ("Panama"), ("Papua New Guinea"),
    ("Paraguay"), ("Peru"), ("Philippines"), ("Poland"), ("Portugal"), ("Qatar"), ("Romania"), ("Russia"), ("Rwanda"),
    ("Saint Kitts and Nevis"),
    ("Saint Lucia"), ("Saint Vincent and the Grenadines"), ("Samoa"), ("San Marino"), ("Sao Tome and Principe"), ("Saudi Arabia"),
    ("Senegal"), ("Serbia"), ("Seychelles"), ("Sierra Leone"), ("Singapore"), ("Slovakia"), ("Slovenia"), ("Solomon Islands"),
    ("Somalia"),
    ("South Africa"), ("South Korea"), ("South Sudan"), ("Spain"), ("Sri Lanka"), ("Sudan"), ("Suriname"), ("Sweden"), ("Switzerland"),
    ("Syria"), ("Tajikistan"), ("Tanzania"), ("Thailand"), ("Timor-Leste"), ("Togo"), ("Tonga"), ("Trinidad and Tobago"), ("Tunisia"),
    ("Turkey"), ("Turkmenistan"), ("Tuvalu"), ("Uganda"), ("Ukraine"), ("United Arab Emirates"), ("United Kingdom"), ("United States"),
    ("Uruguay"), ("Uzbekistan"), ("Vanuatu"), ("Venezuela"), ("Vietnam"), ("Yemen"), ("Zambia"), ("Zimbabwe");
INFO:root:COMMIT
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 100 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 110 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 120 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 0 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 110 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 100 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 110 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 120 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 0 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 130 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 0 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 140 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 0 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 150 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 0 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 160 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 0 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 150 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 140 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 130 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 140 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 150 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 160 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 0 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 150 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 140 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 130 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 120 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 110 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 100 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 110 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 120 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 130 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 140 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 130 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 120 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 110 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 100 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 100 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 50 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 40 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 30 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 20 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 10 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 10 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 20 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 10 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 10 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 20 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 30 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 40 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 50 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 0 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 40 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 30 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 20 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 10 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM countries
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 10 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '11'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 10 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 20 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 10 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 80 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 90 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 10 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 100 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 110 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 0 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 120 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 10 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 110 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 20 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 100 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 30 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 90 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 40 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 80 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 50 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 50 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 40 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 80 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 50 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 100 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND username = 'volunteer1' AND password = '111' AND account_status = 'Active'
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
            SELECT SUM(shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 100 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 110 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 100 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 80 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 90 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 80 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 100 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:BEGIN 
INFO:root:DELETE FROM plans
INFO:root:DELETE FROM camps
INFO:root:DELETE FROM volunteers
INFO:root:DELETE FROM refugees
INFO:root:DELETE FROM countries
INFO:root:COMMIT
INFO:root:BEGIN 
INFO:root:
    INSERT INTO plans (planID, start_date, end_date, name, country, event_name, description, shelter, water, food, medical_supplies) VALUES
    (1, '2023-01-01', '2025-01-01', 'Wylfa Nuclear Meltdown', 'United Kingdom', 'Nuclear Crisis Management', 'Emergency response to nuclear meltdown on Anglesey', 100, 100, 100, 100),
    (2, '2023-01-01', '2025-01-01', 'London Virus Outbreak', 'United Kingdom', 'Virus Containment Effort', 'Response to widespread virus outbreak in London', 200, 200, 200, 200),
    (3, '2023-01-01', '2025-01-01', 'Paris Earthquake Response', 'France', 'Earthquake Relief', 'Relief efforts for earthquake in Paris', 300, 300, 300, 300);
INFO:root:
    INSERT INTO camps (campID, location, shelter, water, max_water, food, max_food, medical_supplies, max_medical_supplies, planID) VALUES
    (1, 'Camden', 20, 300, 600, 200, 400, 100, 200, 1),
    (2, 'Greenwich', 20, 300, 600, 200, 400, 100, 200, 1),
    (3, 'Snowdonia', 20, 300, 600, 200, 400, 100, 200, 2),
    (4, 'Richmond', 20, 300, 600, 200, 400, 100, 200, 2),
    (5, 'Versailles', 20, 300, 600, 200, 400, 100, 200, 3)
    
INFO:root:
    INSERT INTO volunteers (first_name, last_name, username, password, date_of_birth, phone, account_status, campID) VALUES
    -- Camp 1
    ('admin', '111', 'admin', '111', '1990-05-15', '555-1234', 'Active', NULL),
    ('Jane', 'Smith', 'volunteer1', '111', '1985-08-22', '555-5678', 'Active', 1),
    ('Robert', 'Johnson', 'robert_j', 'password789', '1992-03-10', '555-9876', 'Active', 1),
    ('Emily', 'Williams', 'emily_w', 'passwordabc', '1988-11-27', '555-4321', 'Active', 1),
    ('Michael', 'Brown', 'michael_b', 'passworddef', '1995-07-18', '555-8765', 'Inactive', 1),
    ('Sophia', 'Davis', 'sophia_d', 'pass123', '1993-09-05', '555-2345', 'Active', 1),
    ('David', 'Anderson', 'david_a', 'pass456', '1991-02-14', '555-6789', 'Inactive', 1),
    ('Olivia', 'Thomas', 'olivia_t', 'pass789', '1986-12-03', '555-8765', 'Active', 1),
    ('Christopher', 'Garcia', 'chris_g', 'passabc', '1994-04-20', '555-2345', 'Active', 1),
    ('Emma', 'Johnson', 'emma_j', 'pass789', '1998-06-08', '555-5678', 'Active', 1),

    -- Camp 2
    ('Daniel', 'White', 'volunteer2', '222', '1987-10-12', '555-3456', 'Active', 2),
    ('Sophie', 'Miller', 'sophie_m', 'pass456', '1994-01-25', '555-7890', 'Active', 2),
    ('Matthew', 'Davis', 'matthew_d', 'pass789', '1990-09-30', '555-2345', 'Active', 2),
    ('Ava', 'Wilson', 'ava_w', 'passabc', '1985-12-15', '555-6789', 'Active', 2),
    ('Nicholas', 'Taylor', 'nicholas_t', 'passdef', '1992-05-18', '555-8765', 'Inactive', 2),
    ('Grace', 'Moore', 'grace_m', 'passghi', '1997-03-22', '555-1234', 'Active', 2),
    ('Ethan', 'Baker', 'ethan_b', 'passjkl', '1988-08-08', '555-5678', 'Inactive', 2),
    ('Chloe', 'Fisher', 'chloe_f', 'passmno', '1995-04-02', '555-2345', 'Active', 2),
    ('Caleb', 'Ward', 'caleb_w', 'passpqr', '1989-11-10', '555-6789', 'Active', 2),
    ('Madison', 'Perry', 'madison_p', 'passtu', '1996-07-17', '555-8765', 'Active', 2),

    -- Camp 3
    ('Liam', 'Carter', 'volunteer3', '333', '1993-02-05', '555-2345', 'Active', 3),
    ('Aubrey', 'Hayes', 'aubrey_h', 'passyz1', '1998-08-20', '555-6789', 'Active', 3),
    ('Mason', 'Wells', 'mason_w', 'pass234', '1991-04-15', '555-1234', 'Active', 3),
    ('Harper', 'Barnes', 'harper_b', 'pass567', '1986-10-30', '555-5678', 'Active', 3),
    ('Aiden', 'Fisher', 'aiden_f', 'pass890', '1994-12-22', '555-8765', 'Inactive', 3),
    ('Ella', 'Bryant', 'ella_b', 'passabc1', '1997-06-18', '555-2345', 'Active', 3),
    ('Logan', 'Coleman', 'logan_c', 'passdef1', '1989-01-12', '555-6789', 'Inactive', 3),
    ('Avery', 'Reyes', 'avery_r', 'passghi1', '1996-03-25', '555-8765', 'Active', 3),
    ('Lucas', 'Scott', 'lucas_s', 'passjkl1', '1992-07-08', '555-2345', 'Active', 3),
    ('Sophie', 'Jordan', 'sophie_j', 'passmno1', '1995-09-20', '555-6789', 'Active', 3)
    
INFO:root:
    INSERT INTO refugees (first_name, last_name, date_of_birth, gender, familyID, campID, triage_category, medical_conditions, vital_status) VALUES

    --Family separated: 8, 10, 

    -- Camp 1
    ('Isabella', 'Johnson', '2002-08-10', 'Female', 1, 1, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Smith', '1980-03-25', 'Male', 2, 1, 'Urgent', 'Diabetes', 'Alive'),
    ('Charlotte', 'Taylor', '1995-12-05', 'Female', 3, 1, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Henry', 'Clark', '2010-05-18', 'Male', 4, 1, 'None', 'None', 'Alive'),
    ('Sophia', 'Williams', '1998-10-30', 'Female', 5, 1, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('Jacob', 'Brown', '2014-06-22', 'Male', 6, 1, 'Standard', 'None', 'Alive'),
    ('Amelia', 'Harrison', '2003-04-03', 'Female', 7, 1, 'Non-Urgent', 'Allergies', 'Alive'),
    ('William', 'Baker', '1990-01-12', 'Male', 8, 1, 'None', 'Fractured Arm', 'Alive'),
    ('Sophie', 'Evans', '2005-09-20', 'Female', 9, 1, 'Urgent', 'Heart Disease', 'Alive'),
    ('Thomas', 'Jones', '1988-07-08', 'Male', 10, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Aisha', 'Khan', '1996-06-18', 'Female', 11, 1, 'Urgent', 'Hypertension', 'Alive'),
    ('Alexander', 'Brown', '1983-08-14', 'Male', 12, 1, 'None', 'Fractured Leg', 'Alive'),
    ('Lily', 'Taylor', '2007-11-02', 'Female', 13, 1, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Daniel', 'Evans', '2000-02-25', 'Male', 9, 1, 'None', 'None', 'Alive'),
    ('Ella', 'Williams', '1993-03-12', 'Female', 15, 1, 'Standard', 'None', 'Alive'),
    ('Leo', 'Jones', '2012-12-30', 'Male', 10, 1, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 17, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Mia', 'Evans', '1998-04-15', 'Female', 9, 1, 'Urgent', 'Asthma', 'Alive'),
    ('Nooh', 'Baker', '2011-09-10', 'Male', 8, 1, 'Non-Urgent', 'None', 'Alive'),
    ('Liam', 'Thompson', '2004-05-05', 'Male', 20, 1, 'None', 'Fractured Arm', 'Alive'),

    -- Camp 2
    ('Emily', 'White', '2001-11-10', 'Female', 21, 2, 'Standard', 'None', 'Alive'),
    ('Alexander', 'Miller', '1995-03-25', 'Male', 22, 2, 'Urgent', 'Diabetes', 'Alive'),
    ('Mia', 'Davis', '2008-12-05', 'Female', 23, 2, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Leo', 'Baker', '2012-05-18', 'Male', 8, 2, 'Immediate', 'None', 'Alive'),
    ('Isabella', 'Clark', '1999-09-30', 'Female', 25, 2, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('James', 'Martin', '2007-11-15', 'Male', 26, 2, 'Standard', 'None', 'Alive'),
    ('Poppy', 'Harrison', '2015-04-03', 'Female', 7, 2, 'Non-Urgent', 'Allergies', 'Alive'),
    ('Jack', 'Baker', '1988-06-22', 'Male', 8, 2, 'Immediate', 'Fractured Arm', 'Alive'),
    ('Ruby', 'Evans', '2003-09-20', 'Female', 29, 2, 'Urgent', 'Heart Disease', 'Alive'),
    ('George', 'Jones', '1994-07-08', 'Male', 10, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Sophie', 'Harrison', '1996-06-18', 'Female', 7, 2, 'Urgent', 'Hypertension', 'Alive'),
    ('Benjamin', 'Hill', '1983-08-14', 'Male', 32, 2, 'Immediate', 'Fractured Leg', 'Alive'),
    ('Isla', 'Clark', '2007-11-02', 'Female', 33, 2, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Jacob', 'Evans', '2000-02-25', 'Male', 29, 2, 'Immediate', 'None', 'Alive'),
    ('Ella', 'Williams', '1993-03-12', 'Female', 35, 2, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Jones', '2012-12-30', 'Male', 10, 2, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 37, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Ava', 'Evans', '1998-04-15', 'Female', 29, 2, 'Urgent', 'Asthma', 'Alive'),
    ('Noah', 'Baker', '2011-09-10', 'Male', 39, 2, 'Non-Urgent', 'None', 'Alive'),
    ('Ethan', 'Thompson', '2004-05-05', 'Male', 40, 2, 'Immediate', 'Fractured Arm', 'Alive'),

    -- Camp 3
    ('Lily', 'White', '1996-04-20', 'Female', 41, 3, 'Standard', 'None', 'Alive'),
    ('Oliver', 'Taylor', '2002-08-15', 'Male', 42, 3, 'Urgent', 'Diabetes', 'Alive'),
    ('Ava', 'Harrison', '2010-10-05', 'Female', 7, 3, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Ethan', 'Baker', '2014-11-18', 'Male', 39, 3, 'Immediate', 'None', 'Alive'),
    ('Mia', 'Williams', '2001-09-30', 'Female', 45, 3, 'Urgent', 'Respiratory Infection', 'Alive'),
    ('Noah', 'Martin', '2012-01-15', 'Male', 46, 3, 'Standard', 'None', 'Alive'),
    ('Layla', 'Harrison', '2015-04-02', 'Female', 7, 3, 'Non-Urgent', 'Allergies', 'Alive'),
    ('Oliver', 'Baker', '1998-01-12', 'Male', 39, 3, 'Immediate', 'Fractured Arm', 'Alive'),
    ('Isla', 'Evans', '2005-09-20', 'Female', 49, 3, 'Urgent', 'Heart Disease', 'Alive'),
    ('Harry', 'Jones', '1992-07-08', 'Male', 10, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Sophia', 'Taylor', '1996-06-18', 'Female', 51, 3, 'Urgent', 'Hypertension', 'Alive'),
    ('Henry', 'Hill', '1983-08-14', 'Male', 52, 3, 'Immediate', 'Fractured Leg', 'Alive'),
    ('Eva', 'Clark', '2007-11-02', 'Female', 53, 3, 'Non-Urgent', 'Asthma', 'Alive'),
    ('Daniel', 'Evans', '2000-02-25', 'Male', 49, 3, 'Immediate', 'None', 'Alive'),
    ('Sophie', 'Williams', '1993-03-12', 'Female', 55, 3, 'Standard', 'None', 'Alive'),
    ('Leo', 'Jones', '2012-12-30', 'Male', 10, 3, 'Urgent', 'Diabetes', 'Alive'),
    ('Zara', 'Clark', '2005-07-28', 'Female', 57, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Mia', 'Evans', '1998-04-15', 'Female', 49, 3, 'Urgent', 'Asthma', 'Alive'),
    ('Noah', 'Baker', '2011-09-10', 'Male', 8, 3, 'Non-Urgent', 'None', 'Alive'),
    ('Ella', 'Thompson', '2004-05-05', 'Male', 60, 3, 'Immediate', 'Fractured Arm', 'Alive')
    
INFO:root:
    INSERT INTO countries (country) VALUES
    ("Afghanistan"), ("Albania"), ("Algeria"), ("Andorra"), ("Angola"), ("Antigua and Barbuda"), ("Argentina"),
    ("Armenia"), ("Australia"), ("Austria"), ("Azerbaijan"), ("Bahamas"), ("Bahrain"), ("Bangladesh"), ("Barbados"),
    ("Belarus"), ("Belgium"), ("Belize"), ("Benin"), ("Bhutan"), ("Bolivia"), ("Bosnia and Herzegovina"), ("Botswana"),
    ("Brazil"), ("Brunei"), ("Bulgaria"), ("Burkina Faso"), ("Burundi"), ("Côte d'Ivoire"), ("Cabo Verde"), ("Cambodia"),
    ("Cameroon"), ("Canada"), ("Central African Republic"), ("Chad"), ("Chile"), ("China"), ("Colombia"), ("Comoros"),
    ("Congo (Congo-Brazzaville)"), ("Costa Rica"), ("Croatia"), ("Cuba"), ("Cyprus"), ("Czechia (Czech Republic)"),
    ("Democratic Republic of the Congo"), ("Denmark"), ("Djibouti"), ("Dominica"), ("Dominican Republic"), ("Ecuador"),
    ("Egypt"), ("El Salvador"), ("Equatorial Guinea"), ("Eritrea"), ("Estonia"), ("Eswatini (Swaziland)"), ("Ethiopia"),
    ("Fiji"), ("Finland"), ("France"), ("Gabon"), ("Gambia"), ("Georgia"), ("Germany"), ("Ghana"), ("Greece"), ("Grenada"),
    ("Guatemala"), ("Guinea"), ("Guinea-Bissau"), ("Guyana"), ("Haiti"), ("Holy See (Vatican City State)"), ("Honduras"),
    ("Hungary"), ("Iceland"), ("India"), ("Indonesia"), ("Iran"), ("Iraq"), ("Ireland"), ("Israel"), ("Italy"), ("Jamaica"),
    ("Japan"), ("Jordan"), ("Kazakhstan"), ("Kenya"), ("Kiribati"), ("Kuwait"), ("Kyrgyzstan"), ("Laos"), ("Latvia"), ("Lebanon"),
    ("Lesotho"), ("Liberia"), ("Libya"), ("Liechtenstein"), ("Lithuania"), ("Luxembourg"), ("Madagascar"), ("Malawi"),
    ("Malaysia"), ("Maldives"), ("Mali"), ("Malta"), ("Marshall Islands"), ("Mauritania"), ("Mauritius"), ("Mexico"),
    ("Micronesia"), ("Moldova"), ("Monaco"), ("Mongolia"), ("Montenegro"), ("Morocco"), ("Mozambique"), ("Myanmar"),
    ("Namibia"), ("Nauru"), ("Nepal"), ("Netherlands"), ("New Zealand"), ("Nicaragua"), ("Niger"), ("Nigeria"), ("North Korea"),
    ("North Macedonia"), ("Norway"), ("Oman"), ("Pakistan"), ("Palau"), ("Palestine (State of)"), ("Panama"), ("Papua New Guinea"),
    ("Paraguay"), ("Peru"), ("Philippines"), ("Poland"), ("Portugal"), ("Qatar"), ("Romania"), ("Russia"), ("Rwanda"),
    ("Saint Kitts and Nevis"),
    ("Saint Lucia"), ("Saint Vincent and the Grenadines"), ("Samoa"), ("San Marino"), ("Sao Tome and Principe"), ("Saudi Arabia"),
    ("Senegal"), ("Serbia"), ("Seychelles"), ("Sierra Leone"), ("Singapore"), ("Slovakia"), ("Slovenia"), ("Solomon Islands"),
    ("Somalia"),
    ("South Africa"), ("South Korea"), ("South Sudan"), ("Spain"), ("Sri Lanka"), ("Sudan"), ("Suriname"), ("Sweden"), ("Switzerland"),
    ("Syria"), ("Tajikistan"), ("Tanzania"), ("Thailand"), ("Timor-Leste"), ("Togo"), ("Tonga"), ("Trinidad and Tobago"), ("Tunisia"),
    ("Turkey"), ("Turkmenistan"), ("Tuvalu"), ("Uganda"), ("Ukraine"), ("United Arab Emirates"), ("United Kingdom"), ("United States"),
    ("Uruguay"), ("Uzbekistan"), ("Vanuatu"), ("Venezuela"), ("Vietnam"), ("Yemen"), ("Zambia"), ("Zimbabwe");
INFO:root:COMMIT
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 110 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 120 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 0 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 110 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 100 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 50 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 40 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 50 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET water = 90 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 50 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM plans WHERE planID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND planID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 40 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 30 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 40 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 50 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 80 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 70 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 60 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:BEGIN 
INFO:root:UPDATE plans SET shelter = 50 WHERE planID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE username = 'admin' and password = '111'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND username = 'volunteer1' AND password = '111' AND account_status = 'Active'
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
            SELECT SUM(shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 80 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 90 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 100 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 90 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 80 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 80 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 90 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 100 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 110 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 100 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 90 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 80 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 290 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 280 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 270 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 260 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 270 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 280 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 290 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 300 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 310 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 320 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 310 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 300 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 290 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 280 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 270 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 260 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 250 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 240 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
            SELECT SUM(shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 1
INFO:root:
            SELECT SUM(shelter) as sum_shelter,
                SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 1
            GROUP BY planID
            
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 10 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 20 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 30 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 40 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 50 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 60 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 70 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 80 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 90 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 100 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET shelter = 110 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 250 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 260 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 270 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 280 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 290 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 300 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 310 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 320 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 330 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 340 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 350 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 360 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 370 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 380 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 390 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 410 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 420 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
