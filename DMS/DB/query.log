INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 384 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 385 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 386 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 387 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 388 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 389 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 390 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 391 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 392 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 393 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 394 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 395 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 396 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 397 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 398 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 399 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 400 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 401 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 402 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 403 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 407 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 406 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 405 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND username = 'volunteer1' AND password = '111' AND account_status = 'Active'
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM plans WHERE planID IS NOT NULL AND planID = 2
INFO:root:
            SELECT SUM(food) as sum_food,
                SUM(water) as sum_water,
                SUM(max_shelter) as sum_shelter,
                SUM(medical_supplies) as sum_med
            FROM camps
            WHERE planID = 2
            GROUP BY planID
            
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND username = 'admin1' AND password = '111' AND account_status = 'Active'
INFO:root:SELECT * FROM volunteers WHERE campID IS NOT NULL AND username = 'admin1' AND password = '111' AND account_status = 'Active'
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:BEGIN 
INFO:root:UPDATE camps SET water = 404 WHERE campID = 1
INFO:root:COMMIT
INFO:root:SELECT * FROM camps WHERE campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS plans (
        planID INTEGER PRIMARY KEY,
        start_date TEXT,
        end_date TEXT,
        name TEXT,
        country TEXT,
        event_name TEXT,
        description TEXT,
        water INTEGER,
        food INTEGER,
        medical_supplies INTEGER,
        shelter INTEGER
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS camps (
        campID INTEGER PRIMARY KEY,
        location TEXT,
        max_shelter INTEGER,
        water INTEGER,
        max_water INTEGER,
        food INTEGER,
        max_food INTEGER,
        medical_supplies INTEGER,
        max_medical_supplies INTEGER,
        planID INTEGER NOT NULL,
        FOREIGN KEY (planID) REFERENCES plans(planID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS volunteers(
        volunteerID INTEGER PRIMARY KEY,
        first_name TEXT, 
        last_name TEXT,
        username TEXT UNIQUE,
        password TEXT,
        date_of_birth TEXT,
        phone TEXT,
        account_status TEXT CHECK (account_status IN ('Admin', 'Active', 'Inactive')),
        campID INTEGER,
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS refugees (
        refugeeID INTEGER PRIMARY KEY,
        first_name TEXT,
        last_name TEXT,
        date_of_birth TEXT,
        gender TEXT CHECK (gender IN ('Male', 'Female', 'Other')),
        familyID INTEGER,
        campID INTEGER NOT NULL,
        triage_category TEXT CHECK (triage_category IN ('None', 'Non-Urgent', 'Standard', 'Urgent', 'Very-Urgent', 'Immediate')),
        medical_conditions Text,
        vital_status TEXT CHECK (vital_status IN ('Alive', 'Deceased')),
        FOREIGN KEY (campID) REFERENCES camps(campID) ON DELETE CASCADE ON UPDATE CASCADE
        )
        
INFO:root:
    CREATE TABLE IF NOT EXISTS countries (
        country TEXT PRIMARY KEY)
        
INFO:root:
    CREATE TABLE IF NOT EXISTS family(
        familyID INTEGER PRIMARY KEY,
        family_name TEXT,
        lead_family_memberID INTEGER)
        
INFO:root:SELECT * FROM volunteers WHERE volunteerID IS NOT NULL AND username = 'admin' AND password = '111'
INFO:root:SELECT * FROM plans
INFO:root:SELECT * FROM camps
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 1
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 1
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 1
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 2
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 2
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 2
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 3
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 3
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 3
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 4
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 4
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 4
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM camps WHERE campID IS NOT NULL AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'None'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Non-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Standard'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Very-Urgent'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND triage_category = 'Immediate'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Male' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Female' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND gender = 'Other' AND campID = 5
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
INFO:root:
        SELECT familyID
        FROM
            (SELECT familyID, campID
            FROM refugees
            GROUP BY familyID, campID
            ORDER BY familyID)
        GROUP BY familyID
        HAVING COUNT(campID) > 1
            
INFO:root:
        SELECT familyID
        FROM refugees
        WHERE campID = 5
        GROUP BY familyID
        
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Deceased'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5 AND vital_status = 'Alive'
INFO:root:SELECT * FROM refugees WHERE refugeeID IS NOT NULL AND campID = 5
